//Seg Tree for point update
//Source : https://github.com/rustyBot31/CP-Algorithms/blob/main/DataStructures/SegTree
struct SegTree {
    int n; 
    vector<ll> tree;

    SegTree(int _n) {
        n=_n;
        tree.assign(4*n,inf);
    }

    SegTree(const vector<ll> &a) {
        n=(int)a.size();
        tree.assign(4*n,inf);
        build(1,0,n-1,a);
    }

    void recalc(int nod) {
        tree[nod] = min(tree[2*nod], tree[2*nod+1]);
    }

    void build(int nod, int l, int r, const vector<ll> &a) {
        if(l==r) {
            tree[nod]=a[l];
        } else {
            int m=(l+r)/2;
            build(2*nod,l,m,a);
            build(2*nod+1,m+1,r,a);
            recalc(nod);
        }
    }

    void update(int nod, int l, int r, int idx, ll val) {
        if(l==r) {
            tree[nod]=val;
        } else {
            int m=(l+r)/2;
            if(idx<=m) update(2*nod,l,m,idx,val);
            else update(2*nod+1,m+1,r,idx,val);
            recalc(nod);
        }
    }

    ll query(int nod, int l, int r, int ql, int qr) {
        if(qr<l || r<ql) return inf;
        if(ql<=l && r<=qr) return tree[nod];
        int m=(l+r)/2;
        return min(query(2*nod,l,m,ql,qr),query(2*nod+1,m+1,r,ql,qr));
    }
};
